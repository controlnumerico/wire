<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>MainWindow</class>
 <widget class="QMainWindow" name="MainWindow">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>886</width>
    <height>625</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>MainWindow</string>
  </property>
  <widget class="QWidget" name="centralwidget">
   <layout class="QVBoxLayout" name="verticalLayout">
    <item>
     <widget class="QFrame" name="frame">
      <property name="frameShape">
       <enum>QFrame::StyledPanel</enum>
      </property>
      <property name="frameShadow">
       <enum>QFrame::Raised</enum>
      </property>
      <widget class="ActionButton" name="actionbutton_3">
       <property name="geometry">
        <rect>
         <x>340</x>
         <y>20</y>
         <width>180</width>
         <height>180</height>
        </rect>
       </property>
       <property name="font">
        <font>
         <family>DejaVu Sans</family>
         <pointsize>40</pointsize>
         <weight>75</weight>
         <bold>true</bold>
        </font>
       </property>
       <property name="text">
        <string>Run</string>
       </property>
       <property name="actionName" stdset="0">
        <string>program.run</string>
       </property>
      </widget>
      <widget class="ActionCheckBox" name="stop">
       <property name="enabled">
        <bool>false</bool>
       </property>
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>20</y>
         <width>300</width>
         <height>96</height>
        </rect>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Fixed" vsizetype="Fixed">
         <horstretch>0</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>300</width>
         <height>96</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>145</width>
         <height>45</height>
        </size>
       </property>
       <property name="baseSize">
        <size>
         <width>120</width>
         <height>37</height>
        </size>
       </property>
       <property name="focusPolicy">
        <enum>Qt::NoFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">ActionCheckBox::indicator:checked {

image: url(/home/cnc/wire/src/wire/ui/rs/on_toggle_1.png);

}

ActionCheckBox::indicator:unchecked {
image: url(/home/cnc/wire/src/wire/ui/rs/off_toggle_1.png);
}



</string>
       </property>
       <property name="actionName" stdset="0">
        <string>machine.power.toggle</string>
       </property>
      </widget>
      <widget class="ActionButton" name="ref_all_button_6">
       <property name="geometry">
        <rect>
         <x>520</x>
         <y>0</y>
         <width>300</width>
         <height>300</height>
        </rect>
       </property>
       <property name="sizePolicy">
        <sizepolicy hsizetype="Preferred" vsizetype="Fixed">
         <horstretch>1</horstretch>
         <verstretch>0</verstretch>
        </sizepolicy>
       </property>
       <property name="minimumSize">
        <size>
         <width>300</width>
         <height>300</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>125</width>
         <height>125</height>
        </size>
       </property>
       <property name="focusPolicy">
        <enum>Qt::WheelFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">#ref_all_button_6 {
font: 25pt &quot;Bebas Kai&quot;;
background-color: transparent;
background: none;
border:none;
image: url(/home/cnc/wire/src/wire/ui/rs/Home.png);
}

#ref_all_button_6:pressed {
image: url(/home/cnc/wire/src/wire/ui/rs/Home_Down.png);
}</string>
       </property>
       <property name="text">
        <string>HOME</string>
       </property>
       <property name="rules" stdset="0">
        <string>[{&quot;channels&quot;: [{&quot;url&quot;: &quot;status:all_axes_homed&quot;, &quot;trigger&quot;: true}], &quot;property&quot;: &quot;Text&quot;, &quot;expression&quot;: &quot;'HOMED' if ch[0] else 'HOME'&quot;, &quot;name&quot;: &quot;reference_all&quot;}]</string>
       </property>
       <property name="actionName" stdset="0">
        <string>machine.home.axis:x</string>
       </property>
      </widget>
      <widget class="DROLineEdit" name="dro_entry_main_x_3">
       <property name="geometry">
        <rect>
         <x>260</x>
         <y>270</y>
         <width>550</width>
         <height>200</height>
        </rect>
       </property>
       <property name="minimumSize">
        <size>
         <width>550</width>
         <height>200</height>
        </size>
       </property>
       <property name="maximumSize">
        <size>
         <width>550</width>
         <height>200</height>
        </size>
       </property>
       <property name="font">
        <font>
         <family>Digital Display</family>
         <pointsize>112</pointsize>
         <weight>75</weight>
         <italic>false</italic>
         <bold>true</bold>
        </font>
       </property>
       <property name="focusPolicy">
        <enum>Qt::ClickFocus</enum>
       </property>
       <property name="styleSheet">
        <string notr="true">QLineEdit{
background-color: rgb(136, 138, 133,0);
    border-style: transparant;
color: rgb(56, 54, 57);
	border-color: rgb(164, 0, 0);
}</string>
       </property>
       <property name="text">
        <string>     0.000</string>
       </property>
       <property name="alignment">
        <set>Qt::AlignRight|Qt::AlignTrailing|Qt::AlignVCenter</set>
       </property>
       <property name="referenceType" stdset="0">
        <number>1</number>
       </property>
       <property name="axisNumber" stdset="0">
        <number>0</number>
       </property>
       <property name="inchFormat" stdset="0">
        <string>%9.3f</string>
       </property>
       <property name="millimeterFormat" stdset="0">
        <string>%10.3f</string>
       </property>
       <property name="degreeFormat" stdset="0">
        <string>%10.2f</string>
       </property>
       <property name="latheMode" stdset="0">
        <number>1</number>
       </property>
      </widget>
      <widget class="HalCheckBox" name="halcheckbox">
       <property name="geometry">
        <rect>
         <x>50</x>
         <y>550</y>
         <width>41</width>
         <height>31</height>
        </rect>
       </property>
      </widget>
      <widget class="ActionButton" name="EStoper">
       <property name="geometry">
        <rect>
         <x>28</x>
         <y>208</y>
         <width>256</width>
         <height>256</height>
        </rect>
       </property>
       <property name="styleSheet">
        <string notr="true">#EStoper {
background-color: transparent;
background: none;
border:none;
 
image: url(/home/cnc/wire/src/wire/ui/rs/E_Stop_Act.png);
}

#EStoper:pressed {
 
image: url(/home/cnc/wire/src/wire/ui/rs/E_Stop_Inac.png);
}</string>
       </property>
       <property name="actionName" stdset="0">
        <string>machine.estop.toggle</string>
       </property>
      </widget>
      <widget class="StatusLED" name="statusled_8">
       <property name="geometry">
        <rect>
         <x>20</x>
         <y>200</y>
         <width>270</width>
         <height>270</height>
        </rect>
       </property>
       <property name="diameter">
        <number>270</number>
       </property>
       <property name="color">
        <color>
         <red>245</red>
         <green>194</green>
         <blue>17</blue>
        </color>
       </property>
       <property name="state">
        <bool>false</bool>
       </property>
       <property name="flashing">
        <bool>false</bool>
       </property>
       <property name="flashRate">
        <number>300</number>
       </property>
       <property name="rules" stdset="0">
        <string>[{&quot;channels&quot;: [{&quot;url&quot;: &quot;status:task_state?text&quot;, &quot;trigger&quot;: true}], &quot;property&quot;: &quot;Flashing&quot;, &quot;expression&quot;: &quot;ch[0] == 'E-Stop'&quot;, &quot;name&quot;: &quot;Rule_Manual&quot;}, {&quot;name&quot;: &quot;New Rule&quot;, &quot;property&quot;: &quot;On&quot;, &quot;expression&quot;: &quot;ch[0] == 'E-Stop'&quot;, &quot;channels&quot;: [{&quot;url&quot;: &quot;status:task_state?text&quot;, &quot;trigger&quot;: true}]}]</string>
       </property>
      </widget>
      <widget class="HalLedIndicator" name="halledindicator">
       <property name="geometry">
        <rect>
         <x>10</x>
         <y>130</y>
         <width>61</width>
         <height>51</height>
        </rect>
       </property>
       <property name="color">
        <color>
         <red>255</red>
         <green>0</green>
         <blue>0</blue>
        </color>
       </property>
      </widget>
      <zorder>actionbutton_3</zorder>
      <zorder>stop</zorder>
      <zorder>ref_all_button_6</zorder>
      <zorder>dro_entry_main_x_3</zorder>
      <zorder>halcheckbox</zorder>
      <zorder>statusled_8</zorder>
      <zorder>EStoper</zorder>
      <zorder>halledindicator</zorder>
     </widget>
    </item>
   </layout>
  </widget>
  <widget class="QStatusBar" name="statusbar"/>
  <action name="actionExit">
   <property name="text">
    <string>Exit</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+Q</string>
   </property>
  </action>
  <action name="actionOPEN">
   <property name="text">
    <string>oPEN</string>
   </property>
  </action>
  <action name="actionOpen">
   <property name="text">
    <string>Open</string>
   </property>
   <property name="shortcut">
    <string>Ctrl+O</string>
   </property>
  </action>
  <action name="actionFullscreen">
   <property name="checkable">
    <bool>true</bool>
   </property>
   <property name="text">
    <string>Fullscreen</string>
   </property>
   <property name="shortcut">
    <string>F11</string>
   </property>
  </action>
 </widget>
 <customwidgets>
  <customwidget>
   <class>ActionButton</class>
   <extends>QPushButton</extends>
   <header>qtpyvcp.widgets.button_widgets.action_button</header>
  </customwidget>
  <customwidget>
   <class>ActionCheckBox</class>
   <extends>QCheckBox</extends>
   <header>qtpyvcp.widgets.button_widgets.action_checkbox</header>
  </customwidget>
  <customwidget>
   <class>StatusLED</class>
   <extends>QWidget</extends>
   <header>qtpyvcp.widgets.display_widgets.status_led</header>
  </customwidget>
  <customwidget>
   <class>DROLineEdit</class>
   <extends>QLineEdit</extends>
   <header>qtpyvcp.widgets.input_widgets.dro_line_edit</header>
  </customwidget>
  <customwidget>
   <class>HalCheckBox</class>
   <extends>QCheckBox</extends>
   <header>qtpyvcp.widgets.hal_widgets.hal_checkbox</header>
  </customwidget>
  <customwidget>
   <class>HalLedIndicator</class>
   <extends>QWidget</extends>
   <header>qtpyvcp.widgets.hal_widgets.hal_led</header>
  </customwidget>
 </customwidgets>
 <resources/>
 <connections>
  <connection>
   <sender>halcheckbox</sender>
   <signal>stateChanged(int)</signal>
   <receiver>ref_all_button_6</receiver>
   <slot>click()</slot>
   <hints>
    <hint type="sourcelabel">
     <x>159</x>
     <y>294</y>
    </hint>
    <hint type="destinationlabel">
     <x>181</x>
     <y>411</y>
    </hint>
   </hints>
  </connection>
 </connections>
</ui>
